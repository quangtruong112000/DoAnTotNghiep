@model List<Cart>
@{
    ViewBag.Title = "ListOrder";
    var Custormer = (Custormer)ViewBag.Use;
}
@using AppBanThuoc.Models;

<form action="/Comestic/ThanhToan" method="post" class="comestic-listorder">
    <div class="container col-8">
        <div class="row">
            <div class="p-2 col">
                <label for="Name" class="form-label">Họ Tên Khách Hàng</label>
                <input required class="form-control" type="text" value="@Custormer.name" name="Name" placeholder="Họ Tên" aria-label="default input example">
            </div>
            <div class="p-2 col">
                <label for="Email" class="form-label">Email Khách Hàng</label>
                <input required class="form-control" name="Email" value="@Custormer.email"  type="email" placeholder="Email" aria-label="default input example">
            </div>
        </div>
        <div class="row">
            <div class="p-2 col">
                <label for="SDT" class="form-label">SĐT Khách Hàng</label>
                <input required class="form-control" type="text" value="@Custormer.telephone" name="SDT" placeholder="Họ Tên" aria-label="default input example">
            </div>
            
        </div>
        <div class="row">
            <div class="p-2 col">
                <label for="region" class="form-label">Tỉnh</label>
                <select required class="form-control" id="region" name="region" type="text" placeholder="Default input" aria-label="default input example">
                </select>
            </div>
            <div class="p-2 col">
                <label for="district" class="form-label">Quận, Huyện</label>
                <select required class="form-control" name="district" id="district" type="text" aria-label="default input example">
                </select>
            </div>
            <div class="p-2 col">
                <label for="ward" class="form-label">Phường</label>
                <select required class="form-control" name="ward" id="ward" type="text" aria-label="default input example">
                </select>
            </div>

        </div>
        <div class="row">
            <div class="mb-3 col">
                <label for="Adress" class="form-label">Địa chỉ </label>
                <input required class="form-control" name="Adress"  type="text" placeholder="Địa chỉ" aria-label="default input example">
            </div>
            <div class="mb-3 col">
                <label for="exampleFormControlTextarea1" class="form-label">Ghi chú </label>
                <textarea name="Note" class="form-control" id="exampleFormControlTextarea1" rows="3"></textarea>
            </div>
        </div>
    </div>
    @foreach (var item in Model)
    {
        <div class="col-8 container d-flex justify-content-around ">
            <div class="card-body card col-5">
                <div class="d-flex justify-content-around align-items-center">
                    <div  style="width:100px">
                        <img src="@item.Product.Photos.FirstOrDefault().url" class="rounded float-start" width="100" height="120" alt="...">
                    </div>
                    <div class="ps-5" style="flex: 2;">
                        <p> @item.Product.name </p>
                        <p>  <span class="mr-2">   Số Lượng : @item.quantity @item.Product.unit</span> <span class="ms-5">   Giá tiền: @item.Product.price.Value.ToString("N0")   </span>  </p>

                        <p> Thành Tiền @item.intomoney.Value.ToString("N0") VNĐ  </p>
                    </div>
                    <div>
                        <a href="/Comestic/DeleteCart/" class="text-danger"><i style="font-size:20px" class="fas fa-trash-alt"></i></a>
                    </div>
                </div>
            </div>
        </div>

    }
    <div class="col-8  container mt-4 mb-5">
        <div class="p-2">
            <input id="gross" hidden="hidden" value="@Model.Sum(x=>x.intomoney).Value"/>
            <label class="w-100 p-2"> Giá trị hàng  @Model.Sum(x=>x.intomoney).Value.ToString("N0") VNĐ</label>
            <div id="frmpayment">
                <label class="w-100  p-2 " id="free"> </label>
                <input id="ship" name="ship" hidden="hidden"  />
                <label class="w-100 border-top"></label>
                <label class="w-100  p-2" id="payment"> Tổng Tiền Khác Phải Trả :  @Model.Sum(x => x.intomoney).Value.ToString("N0") VNĐ </label>
                <label class="w-100 border-top"></label>
            </div>
           
        </div>
        <div class="form-check mb-3">
            <input class="form-check-input" type="radio" name="flexRadioPayment"  value="momo" id="flexRadioDefault1">
            <label class="form-check-label" for="flexRadioDefault1">
                Thanh toán Online
                <img src="~/Content/momo.ico" style="width:35px" />
            </label>
        </div>
        <div class="form-check mb-3">
            <input class="form-check-input" type="radio" name="flexRadioPayment" value="a" id="flexRadioDefault2" checked>
            <label class="form-check-label" for="flexRadioDefault2">
                Thanh toán khi nhận hàng
                <img src="https://d29fhpw069ctt2.cloudfront.net/icon/image/38239/preview.svg" style="width:35px" />
            </label>
        </div>
        <button type="submit" class="btn btn-outline-warning">Thanh Toán</button>
    </div>
</form>
@section  scripts{
    <script>
        let token = "";
        let region = [];
        let free = {
            "pick_province": "TP Hồ Chí Minh",
            "pick_district": "Quận 9",
            "province": "TP Hồ Chí Minh",
            "district": "Quận 1",
            "address": "",
            "pick_ward": "Phường Tăng Nhơn Phú A",
            "pick_street": "",
            "pick_address": "455 Lê Văn Việt, Phường Tăng Nhơn Phú A, Quận 9, TP Hồ Chí Minh",
            "ward": "string",
            "width": 200,
            "value": 50000,
            "transport": "road",
            "deliver_option": "xfast",
            "tags": [1]
        }
        let district = [];
        $(document).ready(function () {
            Login();
            console.log(token)
            Region();

            $("#region").change(function (k, v) {

                free.province = $("#region").val();
                District(region.find(x => x.name === $("#region").val()).id)

            })
            $("#district").change(function (k, v) {

                free.district = $("#district").val();
                Ward(district.find(x => x.name === $("#district").val()).id)
            })
            $("#ward").change(function (k, v) {

                free.ward = $("#ward").val();
                Free();
               
            })

        });

        const Free = async () => {
            $.ajax({
                async: false,
                url: '/Sendo/Free',
                type: 'POST',
                dataType: 'json',
                data: {data: free},
            }).done(function (res) {

                console.log(res.routes_list)
                $("#free").text(" Tổng Tiền Ship  :" +numberWithCommas(res.routes_list.fee.fee)+ " VNĐ")
                //var data = JSON.parse(res);
                var a = Number($("#gross").val()) + res.routes_list.fee.fee
                $("#payment").text("Tổng tiền khách hàng phải trả là : " + numberWithCommas(a) + " VNĐ")
                $("#ship").val(res.routes_list.fee.fee);
                console.log(a)
            })
        };
        function numberWithCommas(x) {
            x = x.toString();
            var pattern = /(-?\d+)(\d{3})/;
            while (pattern.test(x))
                x = x.replace(pattern, "$1,$2");
            return x;
        }
        const Login = async () => {
            $.ajax({
                async: false,
                url: '/Sendo/Login',
                type: 'GET',
                dataType: 'json',
            }).done(function (res) {

                console.log(res.routes_list.result.token)
                //var data = JSON.parse(res);
                console.log(token);
                token = res.routes_list.result.token,
                    console.log(token)

            })
        };
        const Region = async () => {
            $.ajax({
                async: false,
                url: '/Sendo/region',
                type: 'GET',
                dataType: 'json',
                data: { token: token },
            }).done(function (res) {
                $("#region").empty();

                region = res.routes_list.result
                $.each(res.routes_list.result, function (k, v) {
                    $("#region").append(`<option value="${v.name}">${v.name}</option>`)
                });

            });
        }

        const District = async (id) => {
            $.ajax({
                async: false,
                url: '/Sendo/district',
                type: 'GET',
                dataType: 'json',
                data: { id: id, token: token },
            }).done(function (res) {
                $("#district").empty();
                console.log(res.routes_list)
                district = res.routes_list.result;
                $.each(res.routes_list.result, function (k, v) {
                    $("#district").append(`<option value="${v.name}">${v.name}</option>`)
                });
                $("#ward").empty();
            });
        }
        const Ward = async (id) => {
            $.ajax({
                async: false,
                url: '/Sendo/ward',
                type: 'GET',
                dataType: 'json',
                data: { id: id, token: token },
            }).done(function (res) {

                $("#ward").empty();
                $.each(res.routes_list.result, function (k, v) {
                    $("#ward").append(`<option value="${v.name}">${v.name}</option>`)
                });

            });
        }

    </script>
}
